theme(panel.grid.major.y = element_blank(),
#axis.text.y = element_blank(),
legend.position = "none")
##
## Plot 2: Box plot......
ggplot(pd_gp_clean, aes(items_per_1k_pats,
group = factor(deprivation_decile),
colour = factor(deprivation_decile))) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(items_per_1k_pats,
group = factor(deprivation_decile),
colour = factor(deprivation_decile))) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(seq(1,10,1)),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(items_per_1k_pats,
group = factor(deprivation_decile),
colour = factor(deprivation_decile))) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(1:10),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(items_per_1k_pats,
group = factor(deprivation_decile),
colour = factor(deprivation_decile))) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(c(1,2,3,4,5,6,7,8,9,10)),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(items_per_1k_pats,
group = factor(deprivation_decile),
colour = factor(deprivation_decile))) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(1),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(items_per_1k_pats,
group = factor(deprivation_decile),
colour = factor(deprivation_decile))) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
scale_y_binned() +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(items_per_1k_pats,
group = factor(deprivation_decile),
colour = factor(deprivation_decile))) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
scale_y_discrete() +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(),
legend.position = "none")
##
## Clean and Wrangle Data ------------------------------------------------------
##
pd_gp_clean <- pd_gp %>%
left_join(GPs, by = "gp_id") %>%
drop_na() %>%
mutate(items_per_1k_pats = items/list_size *1000,
deprivation_decile = factor(deprivation_decile)) %>%
filter(covid_period %in% c("pre-covid year 2",
"pre-covid year 1",
"covid year 1",
"covid year 2"),
prescribing_setting == 4,
list_size != 0,
items_per_1k_pats < 200) %>%
group_by(date, deprivation_decile, covid_period) %>%
summarise(items = sum(items), list_size = sum(list_size)) %>%
mutate(items_per_1k_pats = items/list_size *1000,
date = as.Date(date),
month = format(date,"%B"),
year = format(date, "%Y"))
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(items_per_1k_pats,
colour = deprivation_decile)) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(items_per_1k_pats,
colour = deprivation_decile)) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(deprivation_decile),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(x = items_per_1k_pats,
y = deprivation_decile
colour = deprivation_decile)) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(deprivation_decile),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(x = items_per_1k_pats,
y = deprivation_decile,
colour = deprivation_decile)) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(deprivation_decile),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(x = items_per_1k_pats,
y = deprivation_decile,
colour = deprivation_decile)) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(x = items_per_1k_pats,
y = deprivation_decile,
colour = deprivation_decile)) +
geom_boxplot() +
labs(title = 'Systemic Corticosteroids Prescriptions per IMD Decile',
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "IMD Decile",
x = "SCS Prescriptions per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(),
legend.position = "none")
##
## Plot 2: Box plot. -------
ggplot(pd_gp_clean, aes(x = items_per_1k_pats,
y = deprivation_decile,
colour = deprivation_decile)) +
geom_boxplot() +
labs(title = "Systemic Corticosteroids Prescriptions per the Indices<br>of Multiple Deprivation (IMD) Decile",
subtitle = 'Average Prescribing Rate<br>
Apr 2019 - Oct 2021',
y = "IMD Decile",
x = "Items per 1000 patients",
colour='',
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
scale_colour_manual(values = cbf_pal) +
theme(panel.grid.major.y = element_blank(),
axis.text.y = element_text(),
legend.position = "none")
View(pd_gp_clean)
source("~/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/lshtm-data-challenge/Dave/UCB-DC_IMD_plots_538.R")
##
## Plots -----------------------------------------------------------------------
##
## Plot 1 - line: Setup -----
imd_plot <- ggplot(pd_gp_clean,
aes(date,
items_per_1k_pats,
group = factor(deprivation_decile),
colour = factor(deprivation_decile))) +
labs(title = "Systemic Corticosteroids Prescription Rates in England per the Indices<br>of Multiple Deprivation (IMD) Decile",
subtitle = "Prescription rates are very similar between IMD Deciles<br>
IMD decile:
<span style='color:#A6CEE3'>1</span> |
<span style='color:#1F78B4'>2</span> |
<span style='color:#B2DF8A'>3</span> |
<span style='color:#33A02C'>4</span> |
<span style='color:#FB9A99'>5</span> |
<span style='color:#E31A1C'>6</span> |
<span style='color:#FDBF6F'>7</span> |
<span style='color:#FF7F00'>8</span> |
<span style='color:#CAB2D6'>9</span> |
<span style='color:#6A3D9A'>10</span>
",
y = "Items per 1000 patients",
x = "",
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
ylim(0,20) +
scale_colour_manual(values = cbf_pal) +
scale_x_date(labels = scales::label_date_short(),
date_breaks = "3 month",
limits = c(as.Date("2019-01-01"), as.Date("2021-10-01")),
expand=c(0,0)) + # holds the axis to the above lims
theme(panel.grid.major.x = element_blank(),
legend.position = "none")
##
## Plot 1a - line: PowerPoint without annotations ------
imd_no_annot <- imd_plot + geom_line()
##
## Plot 1b - line: PowerPoint with annotations ------
imd_annot <- imd_plot +
geom_vline(xintercept = as.Date("2020-01-28"), # first case in the UK
colour = "gray",
alpha = 0.8) +
annotate("rect", # first lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-03-26"),
xmax = as.Date("2020-05-17"),
ymin=-Inf, ymax=Inf) +
annotate("rect", # second lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-11-05"),
xmax = as.Date("2020-12-02"),
ymin=-Inf,
ymax=Inf) +
annotate("rect", # third lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2021-01-05"),
xmax = as.Date("2021-04-12"),
ymin=-Inf,
ymax=Inf) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 5,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 0.5,
vjust = 0
) +
geom_line()
View(imd_no_annot)
imd_annot
imd_no_annot
source("~/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/lshtm-data-challenge/Dave/UCB-DC_IMD_plots_538.R")
##
## Plot 1c - line: Word with annotations ------
## Save plot for a word document
ggsave('Dave/plots/IMD_Line_word_no_annot.png',
plot = imd_annot +
theme(plot.title = element_markdown(size = 15),
plot.subtitle = element_markdown(size = 12)),
width = 8,
height = 4.5,
units = "in")
## Info ------------------------------------------------------------------------
##
## Script name: Accessing individual drugs from the OpenPrescribing API
##
## Purpose of script: To pull information from OpenPrescribing API on
## corticosteroids by BNF Chemical Substance name.
##
## Author: David Turner
##
## Date Created: 25 Jan 2022
##
## Notes -----------------------------------------------------------------------
##
## Data sources:
## https://openprescribing.net/
## https://digital.nhs.uk/services/organisation-data-service/file-downloads/gp-and-gp-practice-related-data
##          > https://files.digital.nhs.uk/assets/ods/current/epraccur.zip
##
## Style: fivethirtyeight
##
## Setup -----------------------------------------------------------------------
## To install openprescribingR (accesses the OpenPrescribing API).
## Uncomment the following 2 lines to install from github.
# library(devtools)
# devtools::install_github("fergustaylor/openprescribingR")
library(openprescribingR)
library(tidyverse)
library(ggthemes)
library(scales)
##
theme_set(theme_fivethirtyeight())
theme_update(axis.title = element_text(),
plot.caption = element_text(hjust = 0, vjust = 0),
plot.background = element_rect(fill = "white", colour = "white"),
panel.background = element_rect(fill = "white", colour = "white"),
legend.background = element_rect(fill = "white", colour = "white"))
##
## Analysis dataset - CCG level
list_size <- read_csv("data/Analysis Dataset/CCG_corticosterioid_prescriptions.csv")  %>%
select(date, list_size) %>%
group_by(date) %>%
summarise(list_size = sum(list_size))
## Read in mapping for CCG to region
map <- read_csv("data/wrangling/Clinical_Commissioning_Group_to_STPs_(April_2021)_Lookup_in_England.csv")
##
## Read in all BNF codes
BNFcodes <- read_csv("data/wrangling/20220115_1642266807923_BNF_Code_Information.csv")
##
## Find BNF Chemical Substance codes in relevant sections.
## Codelists of partial BNF codes referring to chapters and sections
par_bnf_cds <- c("^010502", "^0603", "^100102")
## Finding all `BNF Chemical Substance Codes` in `par_bnf_cds` chapters
## and sections
bnf_csc <- BNFcodes %>%
subset(Reduce("|", lapply(par_bnf_cds, grepl, BNFcodes$`BNF Presentation Code`))) %>%
filter(str_detect(`BNF Chemical Substance`, "^DUMMY", negate = TRUE)) %>%
pull(`BNF Chemical Substance Code`) %>%
unique()
##
## Pull data from API-----------------------------------------------------------
## Loop to pull information from the api per chem substance and retain the codes
## Empty data list for the loop
datalist = list()
## Loop to pull each substance per CCG
for (i in seq_along(bnf_csc)) {
try(dat <- spending_by_code(bnf_csc[i])) # pull data from api
dat$bnf_csc <- bnf_csc[i]  # add the BNF chem sub codes
datalist[[i]] <- dat # add data to list
}
## bind list into dataframe, add list_size,
## merge with chem sub names and CCG and data wrangle
pd_compound <- do.call(rbind, datalist) %>%
mutate(date = as.Date(date)) %>%
left_join( # for list size
list_size,
by = "date") %>%
drop_na() %>%
left_join( # for BNF Chemical Substance name
unique(select(BNFcodes,
"BNF Chemical Substance Code",
"BNF Chemical Substance")),
by = c("bnf_csc" = "BNF Chemical Substance Code")) %>%
rename(bnf_cs = 'BNF Chemical Substance') %>%
mutate(bnf_cs = factor(bnf_cs),
parent_compound = word(bnf_cs, 1)) %>%
group_by(date, bnf_cs, parent_compound) %>%
summarise(items = sum(items),
list_size = sum(list_size)) %>%
mutate(items_per_1k_pats = items/list_size *1000,
date = as.Date(date))
pd_parent_compound <- pd_compound %>%
group_by(date,
parent_compound,
list_size) %>%
summarise(items = sum(items),
quantity = sum(quantity),
actual_cost = sum(actual_cost)) %>%
mutate(items_per_1k_pats = items/list_size *1000)
##
## aggregate on a national level and by parent compound
epd_national_parent_compound <- pd_ccg %>%
mutate(parent_compound = word(bnf_cs, 1)) %>%
group_by(parent_compound) %>%
mutate(parent_compound_group =
ifelse(sum(items) > 25000,
parent_compound, "Other")) %>%
ungroup() %>%
group_by(date,
parent_compound_group,
list_size) %>%
summarise(items = sum(items),
quantity = sum(quantity),
actual_cost = sum(actual_cost)) %>%
mutate(items_per_1k_pats = items/list_size *1000,
date = as.Date(date),
month = format(date,"%B"),
year = format(date, "%Y"))
##
## plots ---------------
## Setup plot --------
p <- ggplot(mapping = aes(x= date,
y= items_per_1k_pats)) +
labs(title = 'Systemic Corticosteroids Prescriptions per Compound',
subtitle = 'Before and after the onset of COVID-19\nApr 2019 - Oct 2021',
y = "Items perscribed per 1000 patients",
x = "",
colour = "",
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
geom_vline(xintercept = as.Date("2020-01-28"), # first case in the UK
colour = "gray") +
annotate("rect", # first lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-03-26"),
xmax = as.Date("2020-05-17"),
ymin=-Inf, ymax=Inf) +
annotate("rect", # second lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-11-05"),
xmax = as.Date("2020-12-02"),
ymin=-Inf,
ymax=Inf) +
annotate("rect", # third lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2021-01-05"),
xmax = as.Date("2021-04-12"),
ymin=-Inf,
ymax=Inf) +
scale_x_date(labels = scales::label_date_short(),
date_breaks = "3 month",
limits = c(as.Date("2019-03-01"), as.Date("2021-10-01"))) +
theme(panel.grid.major.x = element_blank())
