## Data sources:
## https://openprescribing.net/
## https://digital.nhs.uk/services/organisation-data-service/file-downloads/gp-and-gp-practice-related-data
##          > https://files.digital.nhs.uk/assets/ods/current/epraccur.zip
##
## Style: fivethirtyeight
##
## Setup -----------------------------------------------------------------------
## To install openprescribingR (accesses the OpenPrescribing API).
## Uncomment the following 2 lines to install from github.
# library(devtools)
# devtools::install_github("fergustaylor/openprescribingR")
library(openprescribingR)
library(tidyverse)
library(ggthemes)
library(scales)
##
theme_set(theme_fivethirtyeight())
theme_update(axis.title = element_text(),
plot.caption = element_text(hjust = 0, vjust = 0),
plot.background = element_rect(fill = "white", colour = "white"),
panel.background = element_rect(fill = "white", colour = "white"),
legend.background = element_rect(fill = "white", colour = "white"))
##
## Analysis dataset - CCG level
list_size <- read_csv("data/Analysis Dataset/CCG_corticosterioid_prescriptions.csv")  %>%
select(date, list_size) %>%
group_by(date) %>%
summarise(list_size = sum(list_size))
## Read in mapping for CCG to region
map <- read_csv("data/wrangling/Clinical_Commissioning_Group_to_STPs_(April_2021)_Lookup_in_England.csv")
##
## Read in all BNF codes
BNFcodes <- read_csv("data/wrangling/20220115_1642266807923_BNF_Code_Information.csv")
##
## Find BNF Chemical Substance codes in relevant sections.
## Codelists of partial BNF codes referring to chapters and sections
par_bnf_cds <- c("^010502", "^0603", "^100102")
## Finding all `BNF Chemical Substance Codes` in `par_bnf_cds` chapters
## and sections
bnf_csc <- BNFcodes %>%
subset(Reduce("|", lapply(par_bnf_cds, grepl, BNFcodes$`BNF Presentation Code`))) %>%
filter(str_detect(`BNF Chemical Substance`, "^DUMMY", negate = TRUE)) %>%
pull(`BNF Chemical Substance Code`) %>%
unique()
##
## Pull data from API-----------------------------------------------------------
## Loop to pull information from the api per chem substance and retain the codes
## Empty data list for the loop
datalist = list()
## Loop to pull each substance per CCG
for (i in seq_along(bnf_csc)) {
try(dat <- spending_by_code(bnf_csc[i])) # pull data from api
dat$bnf_csc <- bnf_csc[i]  # add the BNF chem sub codes
datalist[[i]] <- dat # add data to list
}
## bind list into dataframe, add list_size,
## merge with chem sub names and CCG and data wrangle
pd_compound <- do.call(rbind, datalist) %>%
mutate(date = as.Date(date)) %>%
left_join( # for list size
list_size,
by = "date") %>%
drop_na() %>%
left_join( # for BNF Chemical Substance name
unique(select(BNFcodes,
"BNF Chemical Substance Code",
"BNF Chemical Substance")),
by = c("bnf_csc" = "BNF Chemical Substance Code")) %>%
rename(bnf_cs = 'BNF Chemical Substance') %>%
mutate(bnf_cs = factor(bnf_cs),
parent_compound = word(bnf_cs, 1)) %>%
group_by(date, bnf_cs, parent_compound) %>%
summarise(items = sum(items),
list_size = sum(list_size)) %>%
mutate(items_per_1k_pats = items/list_size *1000,
date = as.Date(date))
pd_parent_compound <- pd_compound %>%
group_by(date,
parent_compound,
list_size) %>%
summarise(items = sum(items),
quantity = sum(quantity),
actual_cost = sum(actual_cost)) %>%
mutate(items_per_1k_pats = items/list_size *1000)
##
## aggregate on a national level and by parent compound
epd_national_parent_compound <- pd_ccg %>%
mutate(parent_compound = word(bnf_cs, 1)) %>%
group_by(parent_compound) %>%
mutate(parent_compound_group =
ifelse(sum(items) > 25000,
parent_compound, "Other")) %>%
ungroup() %>%
group_by(date,
parent_compound_group,
list_size) %>%
summarise(items = sum(items),
quantity = sum(quantity),
actual_cost = sum(actual_cost)) %>%
mutate(items_per_1k_pats = items/list_size *1000,
date = as.Date(date),
month = format(date,"%B"),
year = format(date, "%Y"))
##
## plots ---------------
## Setup plot --------
p <- ggplot(mapping = aes(x= date,
y= items_per_1k_pats)) +
labs(title = 'Systemic Corticosteroids Prescriptions per Compound',
subtitle = 'Before and after the onset of COVID-19\nApr 2019 - Oct 2021',
y = "Items perscribed per 1000 patients",
x = "",
colour = "",
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
geom_vline(xintercept = as.Date("2020-01-28"), # first case in the UK
colour = "gray") +
annotate("rect", # first lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-03-26"),
xmax = as.Date("2020-05-17"),
ymin=-Inf, ymax=Inf) +
annotate("rect", # second lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-11-05"),
xmax = as.Date("2020-12-02"),
ymin=-Inf,
ymax=Inf) +
annotate("rect", # third lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2021-01-05"),
xmax = as.Date("2021-04-12"),
ymin=-Inf,
ymax=Inf) +
scale_x_date(labels = scales::label_date_short(),
date_breaks = "3 month",
limits = c(as.Date("2019-03-01"), as.Date("2021-10-01"))) +
theme(panel.grid.major.x = element_blank())
library(readxl)
library(tidyverse)
setwd("/Users/dave/Documents/R programs/emma_bloods/emma_bloods.xlsx")
setwd("/Users/dave/Documents/R programs/emma_bloods/")
em_bld <- read_excel("emma_bloods.xlsx")
View(em_bld)
em_bld <- em_bld %>%
mutate(date = as.Date(date))
View(em_bld)
em_bld <- read_csv("emma_bloods.csv")
View(em_bld)
em_bld <- em_bld %>%
mutate(date = as.Date(date))
View(em_bld)
em_bld <- read_csv("emma_bloods.csv")
em_bld <- em_bld %>%
mutate(date = as.Date(date))
View(em_bld)
View(em_bld)
em_bld <- em_bld %>%
mutate(date = as.character(date))
type(em_bld$Date)
View(em_bld)
em_bld <- read_csv("emma_bloods.csv")
em_bld <- em_bld %>%
mutate(date = as.character(date))
View(em_bld)
em_bld <- read_csv("emma_bloods.csv")
em_bld <- em_bld %>%
mutate(date = as.character(date))
View(em_bld)
em_bld <- em_bld %>%
transmute(date = as.character(Date))
View(em_bld)
View(em_bld)
em_bld <- em_bld %>%
mutate(Date = as.character(Date))
em_bld <- read_csv("emma_bloods.csv")
em_bld <- em_bld %>%
mutate(Date = as.character(Date))
em_bld <- read_csv("emma_bloods.csv") %>%
mutate(Date = as.character(Date))
View(em_bld)
em_bld <- read_csv("emma_bloods.csv") %>%
mutate(Date = as.character(Date))
em_bld <- read_csv("emma_bloods.csv")
em_bld <- read_csv("emma_bloods.csv")
setwd("/Users/dave/Documents/R programs/emma_bloods/")
em_bld <- read_csv("emma_bloods.csv")
ggplot(em_bld, aes(result, date, colour = test)) +
geom_line()
ggplot(em_bld, aes(date, result, colour = test)) +
geom_line()
em_bld <- read_csv("emma_bloods.csv")
ggplot(em_bld %>% filter(), aes(date, result, colour = test)) +
geom_line()
View(em_bld)
ggplot(em_bld %>% filter(), aes(date, result, colour = factro(test)) +
ggplot(em_bld %>% filter(), aes(date, result, colour = factro(test)) +  geom_line()
ggplot(em_bld,
ggplot(em_bld,
ggplot(em_bld, aes(date, result, colour = factro(test)) +
ggplot(em_bld, aes(date, result, colour = factor(test)) +
df <- read_csv("emma_bloods.csv")
gp <- gplot(df, aes(date, result, colour = factor(test))
df <- read_csv("emma_bloods.csv")
gp <- gplot(df, aes(date, result, colour = factor(test))
gp <- gplot(df, aes(date, result, colour = factor(test))
gp <- gplot(df, aes(date, result, colour = factor(test))
View(df)
View(df)
View(df)
df <- read_csv("emma_bloods.csv")
p <- ggplot(df, aes(date, result, colour = factor(test))
p <- ggplot(df, aes(date, result, colour = factor(test)))
p <- ggplot(df, aes(date, result, colour = factor(test)))
p + geom_line
p + geom_line()
df <- read_csv("emma_bloods.csv") %>% mutate(test = factor(test))
View(df)
View(df)
str(df)
df <- read_csv("emma_bloods.csv")
df <- read_csv("emma_bloods.csv")
df <- df %>% mutate(test = factor(test))
View(df)
str(df)
unique(df$test)
df <- read_csv("emma_bloods.csv")
df <- df %>% mutate(test = factor(test))
p <- ggplot(df %>% filter(test = ), aes(date, result, colour = factor(test)))
p + geom_line()
View(df)
df <- read_csv("emma_bloods.csv")
df <- read_csv("emma_bloods.csv")
df <- df %>% mutate(test = factor(test))
p <- ggplot(df %>% filter(test = ), aes(date, result, colour = factor(test)))
p <- ggplot(df %>% filter(test = ), aes(date, result, colour = test))
p <- ggplot(df %>% filter(test = "Serum Ferritin"), aes(date, result, colour = test))
p <- ggplot(df %>% filter(test == "Serum Ferritin"), aes(date, result, colour = test))
p + geom_line()
p <- ggplot(df %>% filter(test == "Serum Ferritin"), aes(date, result)
p <- ggplot(df %>% filter(test == "Serum Ferritin"), aes(date, result))
p + geom_line()
p <- ggplot(df %>% filter(test == "Serum Ferritin"), aes(date, result))
p + geom_line()
unique(df$test)
p <- ggplot(df %>% filter(test == "Serum ferritin"), aes(date, result))
p + geom_line()
p <- df %>% select(test == "Serum ferritin") %>%
ggplot() +
geom_line(aes(date, result))
p
df %>% select(test == "Serum ferritin")
View(df)
p <- df %>% filter(test == "Serum ferritin") %>%
ggplot() +
geom_line(aes(date, result))
p
df %>% filter(test == "Serum ferritin")
p <- df %>% filter(test == "Serum ferritin") %>%
ggplot() +
geom_line(aes(date, result))
p
p <- df %>%
ggplot() +
geom_line(aes(date, result))
p
p <- df %>% filter(test == "Serum ferritin") %>%
ggplot() +
geom_path(aes(date, result))
p
df <- read_csv("emma_bloods.csv")
p <- df %>% filter(test == "Serum ferritin") %>%
ggplot() +
geom_path(aes(date, result))
p
p <- df %>% filter(test == "Serum ferritin") %>%
ggplot() +
geom_point(aes(date, result))
p
p <- df %>%
ggplot() +
geom_point(aes(date, result))
df <- df %>% mutate(test = factor(test))
p <- df %>%
ggplot() +
geom_point(aes(date, result))
p
p <- df %>%
ggplot() +
geom_line(aes(date, result))
p
p <- df %>%
ggplot(colour = test) +
geom_line(aes(date, result))
p
df <- df %>% mutate(test = factor(test))
p <- df %>%
ggplot(colour = test) +
geom_line(aes(date, result))
p
p <- df %>%
ggplot(aes(group = test, colour = test)) +
geom_line(aes(date, result))
p
p <- df %>%
ggplot(aes(x = date, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low)) +
geom_line(aes(y = high))
p
p <- df %>%
ggplot(aes(x = date, colour = test)) +
geom_line(aes(y = result))
df %>%
ggplot(aes(x = date, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low)) +
geom_line(aes(y = high))
df %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low)) +
geom_line(aes(y = high))
df <- df %>% mutate(test = factor(test))
df %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low)) +
geom_line(aes(y = high))
df <- read_csv("emma_bloods.csv")
df <- df %>% mutate(test = factor(test))
df %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low)) +
geom_line(aes(y = high))
d
df %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
View(df)
View(df)
df <- df %>% mutate(test = factor(test))
df <- read_csv("emma_bloods.csv")
View(df)
df <- read_csv("emma_bloods.csv")
df <- df %>% mutate(test = factor(test))
df %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
xlim()
df %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
df <- read_csv("emma_bloods.csv")
df <- df %>% mutate(test = factor(test))
df %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
df %>% filter(group == iron) %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
View(df)
df %>% filter(group == iron) %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
View(df)
df <- read_csv("emma_bloods.csv")
df %>% filter(group == iron) %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
df %>% filter(group == "iron") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
df %>% filter(group == "iron") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_hline(yintercept = 60, linetype = "dotted")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
df <- read_csv("emma_bloods.csv")
df %>% filter(group == "iron") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_hline(yintercept = 60, linetype = "dotted")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
setwd("/Users/dave/Documents/R programs/emma_bloods/")
df <- read_csv("emma_bloods.csv")
df %>% filter(group == "iron") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_hline(yintercept = 60, linetype = "dotted")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
df %>% filter(group == "iron") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_hline(yintercept = 60, linetype = "dotted")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_line(aes(x = date, linetype = ("longdsah")))
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_line(aes(x = date, linetype = ("longdsah")))
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(aes(xintercept = date, linetype = ("longdsah")))
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(aes(xintercept = date, linetype = "longdsah"))
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(aes(xintercept = date) linetype = "longdsah")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(aes(xintercept = date) linetype = "longdsah")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(aes(xintercept = date) linetype = "longdsah"))
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(aes(xintercept = date), linetype = "longdsah"))
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(aes(xintercept = date), linetype = "longdsah")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(xintercept = date, linetype = "longdsah")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(xintercept = df$date, linetype = "longdsah")
df %>% filter(group == "thyroid") %>%
ggplot(aes(x = date, group = test, colour = test)) +
geom_line(aes(y = result)) +
geom_line(aes(y = low), linetype = "dashed") +
geom_line(aes(y = high), linetype = "dashed") +
geom_vline(xintercept = "date", linetype = "longdsah")
