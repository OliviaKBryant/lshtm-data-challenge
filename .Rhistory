"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 1,
vjust = 0)
##
## Line plot 2
p + geom_line(data = filter(epd_national_parent_compound,
parent_compound_group %in%
c("Fludrocortisone",
"Methylprednisolone",
"Hydrocortisone",
"Dexamethasone",
"Triamcinolone"))) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 60000,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 0,
vjust = 0)
##
## Line plot 3
p + geom_line(data = filter(epd_national_parent_compound,
parent_compound_group %in%
c("Budesonide",
"Betamethasone",
"Other"))) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 10000,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 0,
vjust = 0)
##
## Line plots ---------
## have to split it up for scale
## Line plot 1
p + geom_line(data = filter(epd_national_parent_compound,
parent_compound_group == "Prednisolone")) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 700000,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 1,
vjust = 0)
source("~/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/UCB/scripts/drugs_api_extract.R")
##
## Line plots ---------
## have to split it up for scale
## Line plot 1
p + geom_line(data = filter(epd_national_parent_compound,
parent_compound_group == "Prednisolone")) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 700000,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 0.5,
vjust = 0)
##
## Line plot 2
p + geom_line(data = filter(epd_national_parent_compound,
parent_compound_group %in%
c("Fludrocortisone",
"Methylprednisolone",
"Hydrocortisone",
"Dexamethasone",
"Triamcinolone"))) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 60000,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 0,
vjust = 0)
## Line plots ---------
## have to split it up for scale
## Line plot 1
p + geom_line(data = filter(epd_national_parent_compound,
parent_compound_group == "Prednisolone")) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 700000,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 0.5,
vjust = 0)
## Save plot to the size of a 16:9 PowerPoint slide
ggsave('Dave/plots/Corticosteroids_Perscriptions_per_drug_1.png', width = 10, height = 5.625, units = "in")
##
## Line plot 2
p + geom_line(data = filter(epd_national_parent_compound,
parent_compound_group %in%
c("Fludrocortisone",
"Methylprednisolone",
"Hydrocortisone",
"Dexamethasone",
"Triamcinolone"))) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 60000,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 0,
vjust = 0)
## Save plot to the size of a 16:9 PowerPoint slide
ggsave('Dave/plots/Corticosteroids_Perscriptions_per_drug_2.png', width = 10, height = 5.625, units = "in")
##
## Line plot 3
p + geom_line(data = filter(epd_national_parent_compound,
parent_compound_group %in%
c("Budesonide",
"Betamethasone",
"Other"))) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 10000,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 3,
alpha = 0.7,
angle = -90,
hjust = 0,
vjust = 0)
## Save plot to the size of a 16:9 PowerPoint slide
ggsave('Dave/plots/Corticosteroids_Perscriptions_per_drug_3.png', width = 10, height = 5.625, units = "in")
library(tidyverse)
library(readxl)
library(data.table)
setwd("/Users/dave/HDS/Data Challange/UCB")
## GP headcount
gp_count <- read_csv("/Users/dave/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/UCB/raw-data/GPWPracticeCSV.102021/General Practice â€“ October 2021 Practice Level.csv") %>%
select(gp_id = PRAC_CODE, gp_hc = TOTAL_GP_HC) %>%
mutate(gp_hc = as.numeric(gp_hc))
## Analysis dataset
pd_gp <- read_csv("data/Analysis Dataset/GP_corticosterioid_prescriptions.csv") %>%
filter(date == "2016-11-01")
pd_gp_clean <- pd_gp %>%
left_join(gp_count, by = "gp_id") %>%
drop_na() %>%
mutate(gp_per_1000 = gp_hc/list_size*1000,
items_per_1000 = items/list_size *1000,
items_per_gp = items/gp_hc) %>%
filter(list_size != 0,
gp_per_1000 <5,
items_per_1000 <200)
p <- ggplot(pd_gp_clean)
p + geom_density(aes(x = gp_per_1000))
p + geom_density(aes(x = items_per_gp))
p + geom_boxplot(aes(gp_per_1000, colour = rural_urban_overall))
p + geom_point(aes(gp_per_1000, items_per_1000, colour = rural_urban_overall))
p + geom_boxplot(aes(gp_per_1000, colour = factor(deprivation_decile)))
p + geom_boxplot(aes(items_per_gp, colour = factor(deprivation_decile)))
p + geom_boxplot(aes(items_per_gp, colour = factor(rural_urban_overall)))
##
## Load Data -------------------------------------------------------------------
## Analysis dataset
pd_gp <- read_csv("analysis-data/GP_corticosterioid_prescriptions.csv")
library(tidyverse)
library(ggthemes)
setwd("~/HDS/Data Challange/UCB")
theme_set(theme_fivethirtyeight())
theme_update(axis.title = element_text(),
plot.caption = element_text(hjust = 0, vjust = 0))
##
## Load Data -------------------------------------------------------------------
pd_gp <- read_csv("data/Analysis Dataset/GP_corticosterioid_prescriptions.csv")
## GP information for prescribing setting
GPs <- read_csv("data/epraccur.csv", col_names = F) %>%
select(gp_id = X1, prescribing_setting = X26)
View(GPs)
View(pd_gp)
View(pd_gp)
## Load Data -------------------------------------------------------------------
pd_gp <- read_csv("data/Analysis Dataset/GP_corticosterioid_prescriptions.csv")
## GP information for prescribing setting
ccg_mapping <- read_csv("data/LSOA_(2011)_to_Clinical_Commissioning_Groups_to_Sustainability_and_Transformation_Partnerships_(April_2021)_Lookup_in_England.csv")
pd_gp <- pd_gp %>%
leftjoin(ccg_mapping, by = c(LSOA_code = LSOA11CD))
##
## Clean and Wrangle Data ------------------------------------------------------
##
pd_gp <- pd_gp %>%
left_join(ccg_mapping, by = c(LSOA_code = LSOA11CD))
##
## Clean and Wrangle Data ------------------------------------------------------
##
pd_gp <- pd_gp %>%
left_join(ccg_mapping, by = c("LSOA_code" = "LSOA11CD"))
View(pd_gp)
unique(pd_gp$CCG21NM)
unique(pd_gp$LAD21NM)
pd_GPiH <- pd_gp %>%
filter(gp_id == "E85124") %>%
mutate(items_per_1k_pats = items/list_size *1000) %>%
select(date, items, list_size, items_per_1k_pats, name)
View(pd_GPiH)
View(ccg_mapping)
## GP information for prescribing setting
pd_region <- read_csv("data/Analysis Dataset/NHS_England_regions_corticosterioid_prescriptions.csv")
View(pd_region)
View(pd_gp)
View(pd_GPiH)
View(pd_gp)
View(pd_region)
## GP information for prescribing setting
pd_lon <- read_csv("data/Analysis Dataset/NHS_England_regions_corticosterioid_prescriptions.csv") %>%
filter(name = "LONDON COMMISSIONING REGION")
## GP information for prescribing setting
pd_lon <- read_csv("data/Analysis Dataset/NHS_England_regions_corticosterioid_prescriptions.csv") %>%
filter(name == "LONDON COMMISSIONING REGION")
pd_not_GPiH <- pd_gp %>%
filter(gp_id != "E85124") %>%
mutate(items_per_1k_pats = items/list_size *1000) %>%
select(date, items, list_size, items_per_1k_pats, name)
pd_GPatH <- pd_gp %>%
filter(gp_id == "E85124") %>%
mutate(items_per_1k_pats = items/list_size *1000) %>%
select(date, items, list_size, items_per_1k_pats, name)
d_gp <- read_csv("data/Analysis Dataset/GP_corticosterioid_prescriptions.csv")
## GP information for prescribing setting
pd_lon <- read_csv("data/Analysis Dataset/NHS_England_regions_corticosterioid_prescriptions.csv") %>%
filter(name == "LONDON COMMISSIONING REGION")
pd_GPatH <- pd_gp %>%
filter(gp_id == "E85124") %>%
mutate(items_per_1k_pats = items/list_size *1000) %>%
select(date, items, list_size, items_per_1k_pats, name)
pd_gp <- read_csv("data/Analysis Dataset/GP_corticosterioid_prescriptions.csv")
## GP information for prescribing setting
pd_lon <- read_csv("data/Analysis Dataset/NHS_England_regions_corticosterioid_prescriptions.csv") %>%
filter(name == "LONDON COMMISSIONING REGION")
pd_not_GPiH <- pd_gp %>%
mutate(items_per_1k_pats = items/list_size *1000) %>%
filter(list_size != 0,
items_per_1k_pats < 200) %>%
group_by(date) %>%
summarise(items = sum(items), list_size = sum(list_size)) %>%
mutate(items_per_1k_pats = items/list_size *1000,
name = "GP average")
pd_GPatH <- pd_gp %>%
filter(gp_id == "E85124") %>%
mutate(items_per_1k_pats = items/list_size *1000) %>%
select(date, items, list_size, items_per_1k_pats, name)
colnames(pd_lon)
colnames(pd_GPatH)
colnames(pd_not_GPiH)
pd_lon <- read_csv("data/Analysis Dataset/NHS_England_regions_corticosterioid_prescriptions.csv") %>%
filter(name == "LONDON COMMISSIONING REGION") %>%
select(date, items, list_size, name) %>%
mutate(items_per_1k_pats = items/list_size *1000)
colnames(pd_lon)
pd_lon <- read_csv("data/Analysis Dataset/NHS_England_regions_corticosterioid_prescriptions.csv") %>%
filter(name == "LONDON COMMISSIONING REGION") %>%
select(date, items, list_size, name) %>%
mutate(items_per_1k_pats = items/list_size *1000)
rbind(pd_lon, pd_not_GPiH, pd_GPatH)
pd_gp_clean <- rbind(pd_lon, pd_not_GPiH, pd_GPatH)
View(pd_gp_clean)
##
## Plots -----------------------------------------------------------------------
##
## Plot 1: Time Series comparing urban and rural SCS items.
ggplot(pd_gp_clean,
aes(date,
items_per_1k_pats, colour = name)) +
geom_line() +
labs(title = 'Systemic Corticosteroids Prescriptions',
subtitle = 'Babylon GP at Hand',
y = "Items perscribed per 1000 patients",
x = "",
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
geom_vline(xintercept = as.Date("2020-01-28"), # first case in the UK
colour = "gray") +
annotate("rect", # first lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-03-26"),
xmax = as.Date("2020-05-17"),
ymin=-Inf, ymax=Inf) +
annotate("rect", # second lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-11-05"),
xmax = as.Date("2020-12-02"),
ymin=-Inf,
ymax=Inf) +
annotate("rect", # third lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2021-01-05"),
xmax = as.Date("2021-04-12"),
ymin=-Inf,
ymax=Inf) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 5,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 2.4,
alpha = 0.7,
angle = -90,
hjust = 1,
vjust = 0) +
theme(panel.grid.major.x = element_blank())
##
## Plots -----------------------------------------------------------------------
##
## Plot 1: Time Series comparing urban and rural SCS items.
ggplot(pd_gp_clean,
aes(date,
items_per_1k_pats, colour = name)) +
geom_line() +
labs(title = 'Systemic Corticosteroids Prescriptions',
subtitle = 'Babylon GP at Hand',
y = "Items perscribed per 1000 patients",
x = "",
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
geom_vline(xintercept = as.Date("2020-01-28"), # first case in the UK
colour = "gray") +
annotate("rect", # first lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-03-26"),
xmax = as.Date("2020-05-17"),
ymin=-Inf, ymax=Inf) +
annotate("rect", # second lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-11-05"),
xmax = as.Date("2020-12-02"),
ymin=-Inf,
ymax=Inf) +
annotate("rect", # third lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2021-01-05"),
xmax = as.Date("2021-04-12"),
ymin=-Inf,
ymax=Inf) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 5,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 2.4,
alpha = 0.7,
angle = -90,
hjust = 1,
vjust = 0) +
xlim(as.date("2019-01-01"), as.date("2021-10-01"))
##
## Plots -----------------------------------------------------------------------
##
## Plot 1: Time Series comparing urban and rural SCS items.
ggplot(pd_gp_clean,
aes(date,
items_per_1k_pats, colour = name)) +
geom_line() +
labs(title = 'Systemic Corticosteroids Prescriptions',
subtitle = 'Babylon GP at Hand',
y = "Items perscribed per 1000 patients",
x = "",
caption = "Source: OpenPrescribing.net, EBM DataLab, University of Oxford, 2017") +
geom_vline(xintercept = as.Date("2020-01-28"), # first case in the UK
colour = "gray") +
annotate("rect", # first lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-03-26"),
xmax = as.Date("2020-05-17"),
ymin=-Inf, ymax=Inf) +
annotate("rect", # second lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2020-11-05"),
xmax = as.Date("2020-12-02"),
ymin=-Inf,
ymax=Inf) +
annotate("rect", # third lockdown
fill = "gray",
alpha = 0.4,
xmin = as.Date("2021-01-05"),
xmax = as.Date("2021-04-12"),
ymin=-Inf,
ymax=Inf) +
annotate("text", # labels
x = c(as.Date("2020-02-02"),
as.Date("2020-03-29"),
as.Date("2020-11-08"),
as.Date("2021-01-08")),
y = 5,
label = c("1st C19 Case",
"1st Lockdown",
"2nd Lockdown",
"3rd Lockdown") ,
size = 2.4,
alpha = 0.7,
angle = -90,
hjust = 1,
vjust = 0) +
xlim(as.Date("2019-01-01"), as.Date("2021-10-01"))+
theme(panel.grid.major.x = element_blank())
## Save plot to the size of a 16:9 PowerPoint slide
ggsave('plots/GP_In_Hand_Line_538.png', width = 10, height = 5.625, units = "in")
## Save plot to the size of a 16:9 PowerPoint slide
ggsave('Dave/plots/GP_In_Hand_Line_538.png', width = 10, height = 5.625, units = "in")
source("~/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/lshtm-data-challenge/Dave/UCB-DC_Rural_Urban_plots_538.R")
source("~/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/lshtm-data-challenge/Dave/UCB-DC_IMD_plots_538.R")
source("~/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/lshtm-data-challenge/Dave/UCB-DC_IMD_plots_538.R")
source("~/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/UCB/scripts/prescription per gp.R")
source("~/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/UCB/scripts/prescription per gp.R")
gp_count <- read_csv("/Users/dave/Library/CloudStorage/OneDrive-LondonSchoolofHygieneandTropicalMedicine/Data Challange/UCB/raw-data/GPWPracticeCSV.102021/General Practice â€“ October 2021 Practice Level.csv") %>%
select(gp_id = PRAC_CODE, gp_hc = TOTAL_GP_HC) %>%
mutate(gp_hc = as.numeric(gp_hc))
## Analysis dataset
pd_gp <- read_csv("data/Analysis Dataset/GP_corticosterioid_prescriptions.csv") %>%
filter(date == "2016-11-01")
##
pd_gp_clean <- pd_gp %>%
left_join(gp_count, by = "gp_id") %>%
drop_na() %>%
mutate(gp_per_1000 = gp_hc/list_size*1000,
items_per_1000 = items/list_size *1000,
items_per_gp = items/gp_hc) %>%
filter(list_size != 0,
gp_per_1000 <5,
items_per_1000 <200)
p <- ggplot(pd_gp_clean)
p + geom_density(aes(x = gp_per_1000))
p + geom_density(aes(x = items_per_gp))
p + geom_boxplot(aes(gp_per_1000, colour = rural_urban_overall))
p + geom_point(aes(gp_per_1000, items_per_1000, colour = rural_urban_overall))
p + geom_boxplot(aes(gp_per_1000, colour = factor(deprivation_decile)))
p + geom_boxplot(aes(items_per_gp, colour = factor(deprivation_decile)))
p + geom_boxplot(aes(items_per_gp, colour = factor(rural_urban_overall)))
